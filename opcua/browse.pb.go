// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: opcua/browse.proto

package opcua

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BrowseDirectionEnum int32

const (
	BrowseDirectionEnum_FORWARD BrowseDirectionEnum = 0
	BrowseDirectionEnum_INVERSE BrowseDirectionEnum = 1
	BrowseDirectionEnum_BOTH    BrowseDirectionEnum = 2
	BrowseDirectionEnum_INVALID BrowseDirectionEnum = 3
)

// Enum value maps for BrowseDirectionEnum.
var (
	BrowseDirectionEnum_name = map[int32]string{
		0: "FORWARD",
		1: "INVERSE",
		2: "BOTH",
		3: "INVALID",
	}
	BrowseDirectionEnum_value = map[string]int32{
		"FORWARD": 0,
		"INVERSE": 1,
		"BOTH":    2,
		"INVALID": 3,
	}
)

func (x BrowseDirectionEnum) Enum() *BrowseDirectionEnum {
	p := new(BrowseDirectionEnum)
	*p = x
	return p
}

func (x BrowseDirectionEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrowseDirectionEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_opcua_browse_proto_enumTypes[0].Descriptor()
}

func (BrowseDirectionEnum) Type() protoreflect.EnumType {
	return &file_opcua_browse_proto_enumTypes[0]
}

func (x BrowseDirectionEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrowseDirectionEnum.Descriptor instead.
func (BrowseDirectionEnum) EnumDescriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{0}
}

type NodeClass int32

const (
	NodeClass_UNSPECIFIED    NodeClass = 0
	NodeClass_OBJECT         NodeClass = 1
	NodeClass_VARIABLE       NodeClass = 2
	NodeClass_METHOD         NodeClass = 4
	NodeClass_OBJECT_TYPE    NodeClass = 8
	NodeClass_VARIABLE_TYPE  NodeClass = 16
	NodeClass_REFERENCE_TYPE NodeClass = 32
	NodeClass_DATA_TYPE      NodeClass = 64
	NodeClass_VIEW           NodeClass = 128
)

// Enum value maps for NodeClass.
var (
	NodeClass_name = map[int32]string{
		0:   "UNSPECIFIED",
		1:   "OBJECT",
		2:   "VARIABLE",
		4:   "METHOD",
		8:   "OBJECT_TYPE",
		16:  "VARIABLE_TYPE",
		32:  "REFERENCE_TYPE",
		64:  "DATA_TYPE",
		128: "VIEW",
	}
	NodeClass_value = map[string]int32{
		"UNSPECIFIED":    0,
		"OBJECT":         1,
		"VARIABLE":       2,
		"METHOD":         4,
		"OBJECT_TYPE":    8,
		"VARIABLE_TYPE":  16,
		"REFERENCE_TYPE": 32,
		"DATA_TYPE":      64,
		"VIEW":           128,
	}
)

func (x NodeClass) Enum() *NodeClass {
	p := new(NodeClass)
	*p = x
	return p
}

func (x NodeClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeClass) Descriptor() protoreflect.EnumDescriptor {
	return file_opcua_browse_proto_enumTypes[1].Descriptor()
}

func (NodeClass) Type() protoreflect.EnumType {
	return &file_opcua_browse_proto_enumTypes[1]
}

func (x NodeClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeClass.Descriptor instead.
func (NodeClass) EnumDescriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{1}
}

type BrowseResultMask int32

const (
	BrowseResultMask_NONE                BrowseResultMask = 0
	BrowseResultMask_REFERENCE_TYPE_ID   BrowseResultMask = 1
	BrowseResultMask_IS_FORWARD          BrowseResultMask = 2
	BrowseResultMask_NODE_CLASS          BrowseResultMask = 4
	BrowseResultMask_BROWSE_NAME         BrowseResultMask = 8
	BrowseResultMask_DISPLAY_NAME        BrowseResultMask = 16
	BrowseResultMask_TYPE_DEFINITION     BrowseResultMask = 32
	BrowseResultMask_ALL                 BrowseResultMask = 63
	BrowseResultMask_REFERENCE_TYPE_INFO BrowseResultMask = 3
	BrowseResultMask_TARGET_INFO         BrowseResultMask = 60
)

// Enum value maps for BrowseResultMask.
var (
	BrowseResultMask_name = map[int32]string{
		0:  "NONE",
		1:  "REFERENCE_TYPE_ID",
		2:  "IS_FORWARD",
		4:  "NODE_CLASS",
		8:  "BROWSE_NAME",
		16: "DISPLAY_NAME",
		32: "TYPE_DEFINITION",
		63: "ALL",
		3:  "REFERENCE_TYPE_INFO",
		60: "TARGET_INFO",
	}
	BrowseResultMask_value = map[string]int32{
		"NONE":                0,
		"REFERENCE_TYPE_ID":   1,
		"IS_FORWARD":          2,
		"NODE_CLASS":          4,
		"BROWSE_NAME":         8,
		"DISPLAY_NAME":        16,
		"TYPE_DEFINITION":     32,
		"ALL":                 63,
		"REFERENCE_TYPE_INFO": 3,
		"TARGET_INFO":         60,
	}
)

func (x BrowseResultMask) Enum() *BrowseResultMask {
	p := new(BrowseResultMask)
	*p = x
	return p
}

func (x BrowseResultMask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrowseResultMask) Descriptor() protoreflect.EnumDescriptor {
	return file_opcua_browse_proto_enumTypes[2].Descriptor()
}

func (BrowseResultMask) Type() protoreflect.EnumType {
	return &file_opcua_browse_proto_enumTypes[2]
}

func (x BrowseResultMask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrowseResultMask.Descriptor instead.
func (BrowseResultMask) EnumDescriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{2}
}

// BrowseDescription message
type BrowseDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId          string              `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	BrowseDirection BrowseDirectionEnum `protobuf:"varint,2,opt,name=browseDirection,proto3,enum=opcua.BrowseDirectionEnum" json:"browseDirection,omitempty"`
	ReferenceTypeId string              `protobuf:"bytes,3,opt,name=referenceTypeId,proto3" json:"referenceTypeId,omitempty"`
	IncludeSubtypes bool                `protobuf:"varint,4,opt,name=includeSubtypes,proto3" json:"includeSubtypes,omitempty"`
	NodeClassMask   uint32              `protobuf:"varint,5,opt,name=nodeClassMask,proto3" json:"nodeClassMask,omitempty"`
	ResultMask      uint32              `protobuf:"varint,6,opt,name=resultMask,proto3" json:"resultMask,omitempty"`
}

func (x *BrowseDescription) Reset() {
	*x = BrowseDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseDescription) ProtoMessage() {}

func (x *BrowseDescription) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseDescription.ProtoReflect.Descriptor instead.
func (*BrowseDescription) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{0}
}

func (x *BrowseDescription) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *BrowseDescription) GetBrowseDirection() BrowseDirectionEnum {
	if x != nil {
		return x.BrowseDirection
	}
	return BrowseDirectionEnum_FORWARD
}

func (x *BrowseDescription) GetReferenceTypeId() string {
	if x != nil {
		return x.ReferenceTypeId
	}
	return ""
}

func (x *BrowseDescription) GetIncludeSubtypes() bool {
	if x != nil {
		return x.IncludeSubtypes
	}
	return false
}

func (x *BrowseDescription) GetNodeClassMask() uint32 {
	if x != nil {
		return x.NodeClassMask
	}
	return 0
}

func (x *BrowseDescription) GetResultMask() uint32 {
	if x != nil {
		return x.ResultMask
	}
	return 0
}

// BrowseRequest message
type BrowseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHandle                 uint32               `protobuf:"varint,1,opt,name=requestHandle,proto3" json:"requestHandle,omitempty"`
	RequestedMaxReferencesPerNode uint32               `protobuf:"varint,2,opt,name=requestedMaxReferencesPerNode,proto3" json:"requestedMaxReferencesPerNode,omitempty"`
	NodesToBrowse                 []*BrowseDescription `protobuf:"bytes,3,rep,name=nodesToBrowse,proto3" json:"nodesToBrowse,omitempty"`
}

func (x *BrowseRequest) Reset() {
	*x = BrowseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseRequest) ProtoMessage() {}

func (x *BrowseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseRequest.ProtoReflect.Descriptor instead.
func (*BrowseRequest) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{1}
}

func (x *BrowseRequest) GetRequestHandle() uint32 {
	if x != nil {
		return x.RequestHandle
	}
	return 0
}

func (x *BrowseRequest) GetRequestedMaxReferencesPerNode() uint32 {
	if x != nil {
		return x.RequestedMaxReferencesPerNode
	}
	return 0
}

func (x *BrowseRequest) GetNodesToBrowse() []*BrowseDescription {
	if x != nil {
		return x.NodesToBrowse
	}
	return nil
}

// ReferenceDescription message.
type ReferenceDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceTypeId string `protobuf:"bytes,1,opt,name=referenceTypeId,proto3" json:"referenceTypeId,omitempty"`
	IsForward       bool   `protobuf:"varint,2,opt,name=isForward,proto3" json:"isForward,omitempty"`
	NodeId          string `protobuf:"bytes,3,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	BrowseName      string `protobuf:"bytes,4,opt,name=browseName,proto3" json:"browseName,omitempty"`
	DisplayName     string `protobuf:"bytes,5,opt,name=displayName,proto3" json:"displayName,omitempty"`
	NodeClass       uint32 `protobuf:"varint,6,opt,name=nodeClass,proto3" json:"nodeClass,omitempty"`
	TypeDefinition  string `protobuf:"bytes,7,opt,name=typeDefinition,proto3" json:"typeDefinition,omitempty"`
}

func (x *ReferenceDescription) Reset() {
	*x = ReferenceDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceDescription) ProtoMessage() {}

func (x *ReferenceDescription) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceDescription.ProtoReflect.Descriptor instead.
func (*ReferenceDescription) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{2}
}

func (x *ReferenceDescription) GetReferenceTypeId() string {
	if x != nil {
		return x.ReferenceTypeId
	}
	return ""
}

func (x *ReferenceDescription) GetIsForward() bool {
	if x != nil {
		return x.IsForward
	}
	return false
}

func (x *ReferenceDescription) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ReferenceDescription) GetBrowseName() string {
	if x != nil {
		return x.BrowseName
	}
	return ""
}

func (x *ReferenceDescription) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ReferenceDescription) GetNodeClass() uint32 {
	if x != nil {
		return x.NodeClass
	}
	return 0
}

func (x *ReferenceDescription) GetTypeDefinition() string {
	if x != nil {
		return x.TypeDefinition
	}
	return ""
}

// BrowseResult message.
type BrowseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode        uint32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	ContinuationPoint []byte                  `protobuf:"bytes,2,opt,name=continuationPoint,proto3" json:"continuationPoint,omitempty"`
	References        []*ReferenceDescription `protobuf:"bytes,3,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *BrowseResult) Reset() {
	*x = BrowseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseResult) ProtoMessage() {}

func (x *BrowseResult) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseResult.ProtoReflect.Descriptor instead.
func (*BrowseResult) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{3}
}

func (x *BrowseResult) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BrowseResult) GetContinuationPoint() []byte {
	if x != nil {
		return x.ContinuationPoint
	}
	return nil
}

func (x *BrowseResult) GetReferences() []*ReferenceDescription {
	if x != nil {
		return x.References
	}
	return nil
}

// BrowseResponse message.
type BrowseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHandle uint32          `protobuf:"varint,1,opt,name=requestHandle,proto3" json:"requestHandle,omitempty"`
	StatusCode    uint32          `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Results       []*BrowseResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BrowseResponse) Reset() {
	*x = BrowseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseResponse) ProtoMessage() {}

func (x *BrowseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseResponse.ProtoReflect.Descriptor instead.
func (*BrowseResponse) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{4}
}

func (x *BrowseResponse) GetRequestHandle() uint32 {
	if x != nil {
		return x.RequestHandle
	}
	return 0
}

func (x *BrowseResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BrowseResponse) GetResults() []*BrowseResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type BrowseNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHandle             uint32   `protobuf:"varint,1,opt,name=requestHandle,proto3" json:"requestHandle,omitempty"`
	ReleaseContinuationPoints bool     `protobuf:"varint,2,opt,name=releaseContinuationPoints,proto3" json:"releaseContinuationPoints,omitempty"`
	ContinuationPoints        [][]byte `protobuf:"bytes,3,rep,name=continuationPoints,proto3" json:"continuationPoints,omitempty"`
}

func (x *BrowseNextRequest) Reset() {
	*x = BrowseNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseNextRequest) ProtoMessage() {}

func (x *BrowseNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseNextRequest.ProtoReflect.Descriptor instead.
func (*BrowseNextRequest) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{5}
}

func (x *BrowseNextRequest) GetRequestHandle() uint32 {
	if x != nil {
		return x.RequestHandle
	}
	return 0
}

func (x *BrowseNextRequest) GetReleaseContinuationPoints() bool {
	if x != nil {
		return x.ReleaseContinuationPoints
	}
	return false
}

func (x *BrowseNextRequest) GetContinuationPoints() [][]byte {
	if x != nil {
		return x.ContinuationPoints
	}
	return nil
}

type BrowseNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHandle uint32          `protobuf:"varint,1,opt,name=requestHandle,proto3" json:"requestHandle,omitempty"`
	StatusCode    uint32          `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Results       []*BrowseResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BrowseNextResponse) Reset() {
	*x = BrowseNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opcua_browse_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseNextResponse) ProtoMessage() {}

func (x *BrowseNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opcua_browse_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseNextResponse.ProtoReflect.Descriptor instead.
func (*BrowseNextResponse) Descriptor() ([]byte, []int) {
	return file_opcua_browse_proto_rawDescGZIP(), []int{6}
}

func (x *BrowseNextResponse) GetRequestHandle() uint32 {
	if x != nil {
		return x.RequestHandle
	}
	return 0
}

func (x *BrowseNextResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BrowseNextResponse) GetResults() []*BrowseResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_opcua_browse_proto protoreflect.FileDescriptor

var file_opcua_browse_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x11,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0f, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x75, 0x62, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x4d, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x44, 0x0a, 0x1d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x61,
	0x78, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x50, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x54, 0x6f, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x54,
	0x6f, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x70,
	0x63, 0x75, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xa7, 0x01, 0x0a,
	0x11, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x2a, 0x46, 0x0a, 0x13, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4f, 0x52,
	0x57, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x45, 0x52, 0x53,
	0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x2a, 0x94, 0x01, 0x0a, 0x09, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x04, 0x12,
	0x0f, 0x0a, 0x0b, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x08,
	0x12, 0x11, 0x0a, 0x0d, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x20, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x40, 0x12, 0x09, 0x0a, 0x04, 0x56, 0x49, 0x45, 0x57, 0x10, 0x80,
	0x01, 0x2a, 0xbe, 0x01, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x53, 0x5f, 0x46, 0x4f,
	0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x44, 0x45, 0x5f,
	0x43, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x52, 0x4f, 0x57, 0x53,
	0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x20, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x3f, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x46, 0x45,
	0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x3c, 0x32, 0x8d, 0x01, 0x0a, 0x0d, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x12, 0x14,
	0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0a, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x18, 0x2e, 0x6f, 0x70,
	0x63, 0x75, 0x61, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x2e, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x6f, 0x70, 0x63, 0x75, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opcua_browse_proto_rawDescOnce sync.Once
	file_opcua_browse_proto_rawDescData = file_opcua_browse_proto_rawDesc
)

func file_opcua_browse_proto_rawDescGZIP() []byte {
	file_opcua_browse_proto_rawDescOnce.Do(func() {
		file_opcua_browse_proto_rawDescData = protoimpl.X.CompressGZIP(file_opcua_browse_proto_rawDescData)
	})
	return file_opcua_browse_proto_rawDescData
}

var file_opcua_browse_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_opcua_browse_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_opcua_browse_proto_goTypes = []interface{}{
	(BrowseDirectionEnum)(0),     // 0: opcua.BrowseDirectionEnum
	(NodeClass)(0),               // 1: opcua.NodeClass
	(BrowseResultMask)(0),        // 2: opcua.BrowseResultMask
	(*BrowseDescription)(nil),    // 3: opcua.BrowseDescription
	(*BrowseRequest)(nil),        // 4: opcua.BrowseRequest
	(*ReferenceDescription)(nil), // 5: opcua.ReferenceDescription
	(*BrowseResult)(nil),         // 6: opcua.BrowseResult
	(*BrowseResponse)(nil),       // 7: opcua.BrowseResponse
	(*BrowseNextRequest)(nil),    // 8: opcua.BrowseNextRequest
	(*BrowseNextResponse)(nil),   // 9: opcua.BrowseNextResponse
}
var file_opcua_browse_proto_depIdxs = []int32{
	0, // 0: opcua.BrowseDescription.browseDirection:type_name -> opcua.BrowseDirectionEnum
	3, // 1: opcua.BrowseRequest.nodesToBrowse:type_name -> opcua.BrowseDescription
	5, // 2: opcua.BrowseResult.references:type_name -> opcua.ReferenceDescription
	6, // 3: opcua.BrowseResponse.results:type_name -> opcua.BrowseResult
	6, // 4: opcua.BrowseNextResponse.results:type_name -> opcua.BrowseResult
	4, // 5: opcua.BrowseService.Browse:input_type -> opcua.BrowseRequest
	8, // 6: opcua.BrowseService.BrowseNext:input_type -> opcua.BrowseNextRequest
	7, // 7: opcua.BrowseService.Browse:output_type -> opcua.BrowseResponse
	9, // 8: opcua.BrowseService.BrowseNext:output_type -> opcua.BrowseNextResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_opcua_browse_proto_init() }
func file_opcua_browse_proto_init() {
	if File_opcua_browse_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opcua_browse_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opcua_browse_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opcua_browse_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opcua_browse_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opcua_browse_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opcua_browse_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opcua_browse_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opcua_browse_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_opcua_browse_proto_goTypes,
		DependencyIndexes: file_opcua_browse_proto_depIdxs,
		EnumInfos:         file_opcua_browse_proto_enumTypes,
		MessageInfos:      file_opcua_browse_proto_msgTypes,
	}.Build()
	File_opcua_browse_proto = out.File
	file_opcua_browse_proto_rawDesc = nil
	file_opcua_browse_proto_goTypes = nil
	file_opcua_browse_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BrowseServiceClient is the client API for BrowseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrowseServiceClient interface {
	Browse(ctx context.Context, in *BrowseRequest, opts ...grpc.CallOption) (*BrowseResponse, error)
	BrowseNext(ctx context.Context, in *BrowseNextRequest, opts ...grpc.CallOption) (*BrowseNextResponse, error)
}

type browseServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBrowseServiceClient(cc grpc.ClientConnInterface) BrowseServiceClient {
	return &browseServiceClient{cc}
}

func (c *browseServiceClient) Browse(ctx context.Context, in *BrowseRequest, opts ...grpc.CallOption) (*BrowseResponse, error) {
	out := new(BrowseResponse)
	err := c.cc.Invoke(ctx, "/opcua.BrowseService/Browse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *browseServiceClient) BrowseNext(ctx context.Context, in *BrowseNextRequest, opts ...grpc.CallOption) (*BrowseNextResponse, error) {
	out := new(BrowseNextResponse)
	err := c.cc.Invoke(ctx, "/opcua.BrowseService/BrowseNext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrowseServiceServer is the server API for BrowseService service.
type BrowseServiceServer interface {
	Browse(context.Context, *BrowseRequest) (*BrowseResponse, error)
	BrowseNext(context.Context, *BrowseNextRequest) (*BrowseNextResponse, error)
}

// UnimplementedBrowseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBrowseServiceServer struct {
}

func (*UnimplementedBrowseServiceServer) Browse(context.Context, *BrowseRequest) (*BrowseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Browse not implemented")
}
func (*UnimplementedBrowseServiceServer) BrowseNext(context.Context, *BrowseNextRequest) (*BrowseNextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrowseNext not implemented")
}

func RegisterBrowseServiceServer(s *grpc.Server, srv BrowseServiceServer) {
	s.RegisterService(&_BrowseService_serviceDesc, srv)
}

func _BrowseService_Browse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrowseServiceServer).Browse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opcua.BrowseService/Browse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrowseServiceServer).Browse(ctx, req.(*BrowseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrowseService_BrowseNext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowseNextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrowseServiceServer).BrowseNext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opcua.BrowseService/BrowseNext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrowseServiceServer).BrowseNext(ctx, req.(*BrowseNextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrowseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opcua.BrowseService",
	HandlerType: (*BrowseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Browse",
			Handler:    _BrowseService_Browse_Handler,
		},
		{
			MethodName: "BrowseNext",
			Handler:    _BrowseService_BrowseNext_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "opcua/browse.proto",
}
